[{"/Users/dzianis/Movie-Project/client/src/index.js":"1","/Users/dzianis/Movie-Project/client/src/App.js":"2","/Users/dzianis/Movie-Project/client/src/reportWebVitals.js":"3","/Users/dzianis/Movie-Project/client/src/store/store.js":"4","/Users/dzianis/Movie-Project/client/src/store/constants.js":"5","/Users/dzianis/Movie-Project/client/src/store/reducers/DetailsReducer.js":"6","/Users/dzianis/Movie-Project/client/src/store/reducers/SearchReducer.js":"7","/Users/dzianis/Movie-Project/client/src/store/reducers/MoviesReducer.js":"8","/Users/dzianis/Movie-Project/client/src/store/reducers/BlogReducer.js":"9","/Users/dzianis/Movie-Project/client/src/store/reducers/LoadingReducer.js":"10","/Users/dzianis/Movie-Project/client/src/store/reducers/AuthReducer.js":"11","/Users/dzianis/Movie-Project/client/src/routes/PrivateRoute.jsx":"12","/Users/dzianis/Movie-Project/client/src/routes/PublicRoute.jsx":"13","/Users/dzianis/Movie-Project/client/src/view/Auth/Register/Register.jsx":"14","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/Blog.jsx":"15","/Users/dzianis/Movie-Project/client/src/view/Auth/Login/Login.jsx":"16","/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/HomePage.jsx":"17","/Users/dzianis/Movie-Project/client/src/view/Auth/Register/RegisterStyles.js":"18","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/BlogStyle.js":"19","/Users/dzianis/Movie-Project/client/src/view/Auth/Login/LoginStyles.js":"20","/Users/dzianis/Movie-Project/client/src/store/actions/authAction.js":"21","/Users/dzianis/Movie-Project/client/src/store/actions/blogAction.js":"22","/Users/dzianis/Movie-Project/client/src/store/actions/movieAction.js":"23","/Users/dzianis/Movie-Project/client/src/view/utils/validate.js":"24","/Users/dzianis/Movie-Project/client/src/view/utils/functions.js":"25","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/CreateTopic/CreateTopic.jsx":"26","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/TopicPage/TopicPage.jsx":"27","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Profile/Profile.jsx":"28","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Topics/Topics.jsx":"29","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Sidebar/Sidebar.jsx":"30","/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/Navigation/Navigation.jsx":"31","/Users/dzianis/Movie-Project/client/src/store/actions/loadingAction.js":"32","/Users/dzianis/Movie-Project/client/src/store/api.js":"33","/Users/dzianis/Movie-Project/client/src/store/actions/searchAction.js":"34","/Users/dzianis/Movie-Project/client/src/store/services/BlogTopicService.js":"35","/Users/dzianis/Movie-Project/client/src/store/services/BlogMessageService.js":"36","/Users/dzianis/Movie-Project/client/src/store/actions/detailsAction.js":"37","/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/Navigation/NavigationStyle.js":"38","/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/RouteContent/RouteContent.jsx":"39","/Users/dzianis/Movie-Project/client/src/view/Pages/Profile/Profile.jsx":"40","/Users/dzianis/Movie-Project/client/src/view/Pages/Details/Details.jsx":"41","/Users/dzianis/Movie-Project/client/src/view/Pages/SearchPage/SearchPage.jsx":"42","/Users/dzianis/Movie-Project/client/src/view/Pages/Movie/Movie.jsx":"43","/Users/dzianis/Movie-Project/client/src/view/Pages/Library/Library.jsx":"44","/Users/dzianis/Movie-Project/client/src/view/utils/NotFound/NotFound.jsx":"45","/Users/dzianis/Movie-Project/client/src/view/Pages/components/PosterCard/PosterCard.jsx":"46","/Users/dzianis/Movie-Project/client/src/view/Pages/Library/components/LibraryCard.jsx":"47","/Users/dzianis/Movie-Project/client/src/view/Pages/Library/components/LibraryCardStyles.js":"48","/Users/dzianis/Movie-Project/client/src/view/Pages/components/PosterCard/PosterCardStyle.js":"49","/Users/dzianis/Movie-Project/client/src/view/Pages/components/Rating/Rating.jsx":"50","/Users/dzianis/Movie-Project/client/src/view/Pages/components/Rating/RatingStyle.js":"51","/Users/dzianis/Movie-Project/client/src/view/Pages/Details/DetailsStyle.js":"52","/Users/dzianis/Movie-Project/client/src/view/Pages/Profile/ProfileStyle.js":"53","/Users/dzianis/Movie-Project/client/src/view/utils/Loading/Loading.jsx":"54","/Users/dzianis/Movie-Project/client/src/view/Pages/SearchPage/components/SearchCard/SearchCard.jsx":"55","/Users/dzianis/Movie-Project/client/src/view/Pages/Details/components/SimilarMovies/SimilarMovies.jsx":"56","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Profile/components/Panel/Panel.jsx":"57","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Profile/components/CircularLabel/CircularLabel.jsx":"58","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Sidebar/BlogIcons.js":"59","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Topics/TopicsStyle.js":"60","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Profile/ProfileStyle.js":"61","/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/Sidebar/SideBar.jsx":"62","/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/NavBar/NavBar.jsx":"63","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/BlogCard/BlogCard.jsx":"64","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/TopicPage/TopicPageStyle.js":"65","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Profile/components/Panel/PanelStyle.js":"66","/Users/dzianis/Movie-Project/client/src/view/Pages/Details/components/SimilarMovies/SimilarMoviesStyle.js":"67","/Users/dzianis/Movie-Project/client/src/view/Pages/SearchPage/components/SearchCard/SearchCardStyle.js":"68","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Profile/components/RatedCard/RatedCard.jsx":"69","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/TopicMessage/TopicMessage.jsx":"70","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/BlogCard/BlogCardStyle.js":"71","/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/Sidebar/SideBarIcons.js":"72","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/CreateTopic/CreateTopicStyle.js":"73","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Profile/components/RatedCard/RatedCardStyle.js":"74","/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/NavBar/components/SearchForm/SearchForm.jsx":"75","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/TopicMessage/TopicMessageStyle.js":"76","/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/NavBar/components/SearchForm/SliderStyle.js":"77","/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/NavBar/components/SearchForm/SearchFormStyle.js":"78","/Users/dzianis/Movie-Project/client/src/store/reducers/EventReducer.js":"79","/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/NavBar/components/CreateForm/CreateForm.jsx":"80","/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/Types/Types.js":"81","/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/Locations/Locations.js":"82","/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/NavBar/components/CreateForm/SliderStyle.js":"83","/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/NavBar/components/CreateForm/CreateFormStyle.js":"84"},{"size":715,"mtime":1620398198056,"results":"85","hashOfConfig":"86"},{"size":1641,"mtime":1620398242113,"results":"87","hashOfConfig":"86"},{"size":362,"mtime":1620398198056,"results":"88","hashOfConfig":"86"},{"size":790,"mtime":1620398242116,"results":"89","hashOfConfig":"86"},{"size":2792,"mtime":1620398242115,"results":"90","hashOfConfig":"86"},{"size":412,"mtime":1620398242115,"results":"91","hashOfConfig":"86"},{"size":348,"mtime":1620398198058,"results":"92","hashOfConfig":"86"},{"size":2679,"mtime":1620398242116,"results":"93","hashOfConfig":"86"},{"size":1387,"mtime":1620398198058,"results":"94","hashOfConfig":"86"},{"size":899,"mtime":1620398198058,"results":"95","hashOfConfig":"86"},{"size":2435,"mtime":1620398198058,"results":"96","hashOfConfig":"86"},{"size":375,"mtime":1620398198056,"results":"97","hashOfConfig":"86"},{"size":398,"mtime":1620398198057,"results":"98","hashOfConfig":"86"},{"size":5440,"mtime":1620398198060,"results":"99","hashOfConfig":"86"},{"size":6690,"mtime":1620398242116,"results":"100","hashOfConfig":"86"},{"size":4958,"mtime":1620398198059,"results":"101","hashOfConfig":"86"},{"size":800,"mtime":1620398242118,"results":"102","hashOfConfig":"86"},{"size":571,"mtime":1620398198060,"results":"103","hashOfConfig":"86"},{"size":1100,"mtime":1620398198060,"results":"104","hashOfConfig":"86"},{"size":569,"mtime":1620398198059,"results":"105","hashOfConfig":"86"},{"size":4730,"mtime":1620398242114,"results":"106","hashOfConfig":"86"},{"size":8295,"mtime":1620398198057,"results":"107","hashOfConfig":"86"},{"size":10582,"mtime":1620398242114,"results":"108","hashOfConfig":"86"},{"size":603,"mtime":1620398198078,"results":"109","hashOfConfig":"86"},{"size":1450,"mtime":1620398198078,"results":"110","hashOfConfig":"86"},{"size":3298,"mtime":1620398198060,"results":"111","hashOfConfig":"86"},{"size":7406,"mtime":1620398198063,"results":"112","hashOfConfig":"86"},{"size":3349,"mtime":1620398242117,"results":"113","hashOfConfig":"86"},{"size":1176,"mtime":1620398198063,"results":"114","hashOfConfig":"86"},{"size":1442,"mtime":1620398198062,"results":"115","hashOfConfig":"86"},{"size":6239,"mtime":1620398242120,"results":"116","hashOfConfig":"86"},{"size":482,"mtime":1620398198057,"results":"117","hashOfConfig":"86"},{"size":2602,"mtime":1620398242114,"results":"118","hashOfConfig":"86"},{"size":118,"mtime":1620398198057,"results":"119","hashOfConfig":"86"},{"size":1920,"mtime":1620398198059,"results":"120","hashOfConfig":"86"},{"size":2044,"mtime":1620398198059,"results":"121","hashOfConfig":"86"},{"size":1914,"mtime":1620398198057,"results":"122","hashOfConfig":"86"},{"size":3614,"mtime":1620398242120,"results":"123","hashOfConfig":"86"},{"size":1027,"mtime":1620398242121,"results":"124","hashOfConfig":"86"},{"size":5630,"mtime":1620398242123,"results":"125","hashOfConfig":"86"},{"size":5005,"mtime":1620398242117,"results":"126","hashOfConfig":"86"},{"size":2023,"mtime":1620398242123,"results":"127","hashOfConfig":"86"},{"size":1703,"mtime":1620398242123,"results":"128","hashOfConfig":"86"},{"size":1265,"mtime":1620398242122,"results":"129","hashOfConfig":"86"},{"size":412,"mtime":1620398198076,"results":"130","hashOfConfig":"86"},{"size":2899,"mtime":1620398242124,"results":"131","hashOfConfig":"86"},{"size":1134,"mtime":1620398242122,"results":"132","hashOfConfig":"86"},{"size":1160,"mtime":1620398198069,"results":"133","hashOfConfig":"86"},{"size":1507,"mtime":1620398198074,"results":"134","hashOfConfig":"86"},{"size":862,"mtime":1620398242124,"results":"135","hashOfConfig":"86"},{"size":90,"mtime":1620398198075,"results":"136","hashOfConfig":"86"},{"size":2271,"mtime":1620398198064,"results":"137","hashOfConfig":"86"},{"size":1212,"mtime":1620398198070,"results":"138","hashOfConfig":"86"},{"size":409,"mtime":1620398198075,"results":"139","hashOfConfig":"86"},{"size":2631,"mtime":1620398242123,"results":"140","hashOfConfig":"86"},{"size":2293,"mtime":1620398198064,"results":"141","hashOfConfig":"86"},{"size":2484,"mtime":1620398198061,"results":"142","hashOfConfig":"86"},{"size":727,"mtime":1620398198061,"results":"143","hashOfConfig":"86"},{"size":839,"mtime":1620398198062,"results":"144","hashOfConfig":"86"},{"size":120,"mtime":1620398198063,"results":"145","hashOfConfig":"86"},{"size":924,"mtime":1620398198061,"results":"146","hashOfConfig":"86"},{"size":870,"mtime":1620398242121,"results":"147","hashOfConfig":"86"},{"size":2411,"mtime":1620398242118,"results":"148","hashOfConfig":"86"},{"size":1232,"mtime":1620398198060,"results":"149","hashOfConfig":"86"},{"size":909,"mtime":1620398198063,"results":"150","hashOfConfig":"86"},{"size":95,"mtime":1620398198062,"results":"151","hashOfConfig":"86"},{"size":889,"mtime":1620398198064,"results":"152","hashOfConfig":"86"},{"size":632,"mtime":1620398198071,"results":"153","hashOfConfig":"86"},{"size":825,"mtime":1620398198062,"results":"154","hashOfConfig":"86"},{"size":5972,"mtime":1620398198062,"results":"155","hashOfConfig":"86"},{"size":101,"mtime":1620398198060,"results":"156","hashOfConfig":"86"},{"size":969,"mtime":1620398242122,"results":"157","hashOfConfig":"86"},{"size":378,"mtime":1620398198061,"results":"158","hashOfConfig":"86"},{"size":468,"mtime":1620398198062,"results":"159","hashOfConfig":"86"},{"size":2889,"mtime":1620398242119,"results":"160","hashOfConfig":"86"},{"size":677,"mtime":1620398198063,"results":"161","hashOfConfig":"86"},{"size":1086,"mtime":1620398198067,"results":"162","hashOfConfig":"86"},{"size":2498,"mtime":1620398242120,"results":"163","hashOfConfig":"86"},{"size":494,"mtime":1620398242115,"results":"164","hashOfConfig":"86"},{"size":4630,"mtime":1620398242119,"results":"165","hashOfConfig":"86"},{"size":1797,"mtime":1620398458515,"results":"166","hashOfConfig":"86"},{"size":2243,"mtime":1620398454484,"results":"167","hashOfConfig":"86"},{"size":1086,"mtime":1620398242119,"results":"168","hashOfConfig":"86"},{"size":2636,"mtime":1620398242119,"results":"169","hashOfConfig":"86"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12m0klr",{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"174"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"174"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":4,"source":"219","usedDeprecatedRules":"174"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"174"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"174"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"174"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"174"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"264","usedDeprecatedRules":"174"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"283","messages":"284","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"285","usedDeprecatedRules":"174"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"174"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"309","messages":"310","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"174"},{"filePath":"322","messages":"323","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"174"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"335","messages":"336","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"174"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"174"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"342","messages":"343","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"344","messages":"345","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"346","messages":"347","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/dzianis/Movie-Project/client/src/index.js",[],"/Users/dzianis/Movie-Project/client/src/App.js",[],["352","353"],"/Users/dzianis/Movie-Project/client/src/reportWebVitals.js",[],"/Users/dzianis/Movie-Project/client/src/store/store.js",[],"/Users/dzianis/Movie-Project/client/src/store/constants.js",[],"/Users/dzianis/Movie-Project/client/src/store/reducers/DetailsReducer.js",[],"/Users/dzianis/Movie-Project/client/src/store/reducers/SearchReducer.js",[],"/Users/dzianis/Movie-Project/client/src/store/reducers/MoviesReducer.js",[],"/Users/dzianis/Movie-Project/client/src/store/reducers/BlogReducer.js",[],"/Users/dzianis/Movie-Project/client/src/store/reducers/LoadingReducer.js",[],"/Users/dzianis/Movie-Project/client/src/store/reducers/AuthReducer.js",[],"/Users/dzianis/Movie-Project/client/src/routes/PrivateRoute.jsx",[],"/Users/dzianis/Movie-Project/client/src/routes/PublicRoute.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Auth/Register/Register.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/Blog.jsx",["354","355"],"import React, { Component } from \"react\";\nimport firebase from \"firebase\";\nimport CreateTopic from \"./components/CreateTopic/CreateTopic\";\nimport Profile from \"./components/Profile/Profile\";\nimport Topics from \"./components/Topics/Topics\";\nimport TopicPage from \"./components/TopicPage/TopicPage\";\nimport {\n  LinearProgress,\n  CssBaseline,\n  Avatar,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport {\n  createTopic,\n  getTopics,\n  getTopicInfo,\n  sendMessage,\n  getMessages,\n  updateLikesInHeader,\n  updateMessagesLikes,\n  deleteMessage,\n  setNotification,\n} from \"./../../../store/actions/blogAction\";\nimport { getRateMovies, getRateTv } from \"../../../store/actions/movieAction\";\nimport { setDefaultAvatar } from \"./../../utils/functions\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport { BlogStyle } from \"./BlogStyle\";\nimport { compose } from \"redux\";\nimport { connect } from \"react-redux\";\nimport { setUser, updatePhoto } from \"./../../../store/actions/authAction\";\nimport Sidebar from \"./components/Sidebar/Sidebar\";\n\nclass Blog extends Component {\n  componentDidMount() {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        firebase\n          .firestore()\n          .collection(\"users\")\n          .doc(user.uid)\n          .get()\n          .then((doc) => {\n            this.props.setUser({ ...doc.data(), id: doc.id });\n          });\n      }\n    });\n  }\n  showAvatar = (styles) => {\n    const { width, height, margin } = styles;\n    return (\n      <Avatar style={{ width: width, height: height, marginTop: margin }}>\n        {this.props.photoUrl ? (\n          <img\n            src={this.props.photoUrl}\n            className={this.props.classes.profilePhoto}\n            style={{ width: width, height: height }}\n          />\n        ) : (\n          <Typography className={this.props.classes.avatarText} variant=\"h3\">\n            {setDefaultAvatar(this.props.firstName, this.props.lastName)}\n          </Typography>\n        )}\n      </Avatar>\n    );\n  };\n  showLoading = () => {\n    if (this.props.isMessageLoading) {\n      return <LinearProgress className={this.props.classes.loader} />;\n    }\n  };\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <Sidebar classes={classes} showAvatar={this.showAvatar} />\n        <main className={classes.content}>\n          {this.showLoading()}\n          <Switch>\n            <Route path=\"/blog/createTopic\" exact>\n              <CreateTopic\n                className={classes.createTopic}\n                createTopic={this.props.createTopic}\n                firstName={this.props.firstName}\n                lastName={this.props.lastName}\n                id={this.props.userId}\n                setNotification={this.props.setNotification}\n                notification={this.props.notification}\n                isNotificationLoading={this.props.isNotificationLoading}\n              />\n            </Route>\n            <Route path=\"/blog\" exact>\n              <Topics\n                className={classes.topics}\n                topics={this.props.topics}\n                getTopics={this.props.getTopics}\n              />\n            </Route>\n            <Route path=\"/blog/topics\" exact>\n              <Topics\n                className={classes.topics}\n                topics={this.props.topics}\n                getTopics={this.props.getTopics}\n                isLoading={this.props.isLoading}\n              />\n            </Route>\n            <Route path=\"/blog/topic/:id\" exact>\n              <TopicPage\n                className={classes.topics}\n                topicInfo={this.props.topicInfo}\n                getTopicInfo={this.props.getTopicInfo}\n                isLoading={this.props.isLoading}\n                sendMessage={this.props.sendMessage}\n                getMessages={this.props.getMessages}\n                userId={this.props.userId}\n                firstName={this.props.firstName}\n                lastName={this.props.lastName}\n                messages={this.props.messages}\n                updateLikesInHeader={this.props.updateLikesInHeader}\n                updateMessagesLikes={this.props.updateMessagesLikes}\n                isMessageLoading={this.props.isMessageLoading}\n                deleteMessage={this.props.deleteMessage}\n                showAvatar={this.showAvatar}\n                updatePhoto={this.props.updatePhoto}\n              />\n            </Route>\n            <Route path=\"/blog/profile\" exact>\n              <Profile\n                firstName={this.props.firstName}\n                lastName={this.props.lastName}\n                photoUrl={this.props.photoUrl}\n                email={this.props.email}\n                getRatedMovies={this.props.getRatedMovies}\n                getRateTv={this.props.getRateTv}\n                rateMovies={this.props.rateMovies}\n                rateTv={this.props.rateTv}\n                myAverageMovies={this.props.myAverageMovies}\n                myAverageTv={this.props.myAverageTv}\n                showAvatar={this.showAvatar}\n              />\n            </Route>\n          </Switch>\n        </main>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  userId: state.AuthReducer.userId,\n  email: state.AuthReducer.email,\n  firstName: state.AuthReducer.firstName,\n  lastName: state.AuthReducer.lastName,\n  photoUrl: state.AuthReducer.photoUrl,\n  topics: state.BlogReducer.topics,\n  topicInfo: state.BlogReducer.topicInfo,\n  messages: state.BlogReducer.messages,\n  notification: state.BlogReducer.notification,\n  rateMovies: state.MoviesReducer.rateMovies,\n  rateTv: state.MoviesReducer.rateTv,\n  myAverageMovies: state.MoviesReducer.myAverageMovies,\n  myAverageTv: state.MoviesReducer.myAverageTv,\n  isLoading: state.LoadingReducer.isLoading,\n  isNotificationLoading: state.LoadingReducer.isNotificationLoading,\n  isMessageLoading: state.LoadingReducer.isMessageLoading,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setUser: (data) => dispatch(setUser(data)),\n  createTopic: (data, credentials) => dispatch(createTopic(data, credentials)),\n  getTopics: () => dispatch(getTopics()),\n  getTopicInfo: (id) => dispatch(getTopicInfo(id)),\n  sendMessage: (userId, id, data) => dispatch(sendMessage(userId, id, data)),\n  getMessages: (id) => dispatch(getMessages(id)),\n  updateLikesInHeader: (ID, data) => dispatch(updateLikesInHeader(ID, data)),\n  updateMessagesLikes: (ID, data) => dispatch(updateMessagesLikes(ID, data)),\n  deleteMessage: (ID) => dispatch(deleteMessage(ID)),\n  setNotification: (payload) => dispatch(setNotification(payload)),\n  getRatedMovies: (page) => dispatch(getRateMovies(page)),\n  getRateTv: (page) => dispatch(getRateTv(page)),\n  updatePhoto: (ID, photoUrl) => dispatch(updatePhoto(ID, photoUrl)),\n});\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withStyles(BlogStyle, { withTheme: true })\n)(Blog);\n","/Users/dzianis/Movie-Project/client/src/view/Auth/Login/Login.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/HomePage.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Auth/Register/RegisterStyles.js",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/BlogStyle.js",[],"/Users/dzianis/Movie-Project/client/src/view/Auth/Login/LoginStyles.js",[],"/Users/dzianis/Movie-Project/client/src/store/actions/authAction.js",["356","357"],"import firebase from \"firebase\";\nimport axios from \"axios\";\nimport { SubmissionError } from \"redux-form\";\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_ERROR,\n  SIGNOUT_SUCCESS,\n  SIGNOUT_ERROR,\n  SET_USER,\n  SET_PHOTO,\n  SET_REGISTER_NOTIF,\n} from \"./../constants\";\nimport { USER } from \"./../api\";\nimport { setLoading, setAvatarLoading } from \"./loadingAction\";\nimport { getMessages, getTopicInfo } from \"./blogAction\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const loginSuccess = (payload) => ({ type: LOGIN_SUCCESS, payload });\nexport const loginError = (payload) => ({ type: LOGIN_ERROR, payload });\nexport const signOutSucces = () => ({ type: SIGNOUT_SUCCESS });\nexport const signOutError = (payload) => ({ type: SIGNOUT_ERROR, payload });\nexport const setUser = (payload) => ({ type: SET_USER, payload });\nexport const setPhoto = (payload) => ({ type: SET_PHOTO, payload });\nexport const registerSuccess = (payload) => ({\n  type: REGISTER_SUCCESS,\n  payload,\n});\nexport const registerError = (payload) => ({ type: REGISTER_ERROR, payload });\nexport const setNotification = (payload) => ({\n  type: SET_REGISTER_NOTIF,\n  payload,\n});\n\nexport const getUserInfo = async (id) => {\n  const userData = await firebase.firestore().collection(\"users\").doc(id).get();\n  const user = { ...userData.data(), id: userData.id };\n  return user;\n};\n\nexport const login = (credentials) => (dispatch) => {\n  dispatch(setLoading(true));\n  const { email, password, checked } = credentials;\n  return axios\n    .post(USER.LOGIN(), {\n      email,\n      password,\n    })\n    .then((data) => {\n      const { token } = data.data;\n      if (checked) localStorage.setItem(\"token\", token);\n      dispatch(\n        loginSuccess({\n          isAuth: true,\n          userId: token,\n          email: email,\n          photoUrl: \"\",\n        })\n      );\n      dispatch(setLoading(false));\n    })\n    .catch((error) => {\n      console.log('error', error.response)\n      dispatch(setLoading(false));\n      // throw new SubmissionError({ _error: error.response.data.message });\n    });\n};\n\nexport const register = (credentials) => (dispatch) => {\n  dispatch(setLoading(true));\n  const { email, password } = credentials;\n  return axios\n    .post(USER.REGISTER(), {\n      email,\n      password,\n    })\n    .then((data) => {\n      dispatch(\n        registerSuccess({\n          message: `your token ${data.data.token}`,\n          userId: data.data.token,\n        })\n      );\n      dispatch(setLoading(false));\n    })\n    .catch((error) => {\n      dispatch(setLoading(false));\n       console.log('error', error.response)\n      // throw new SubmissionError({ _error: error.response.data.message });\n    });\n};\n\nexport const signOut = (history) => (dispatch) => {\n  firebase\n    .auth()\n    .signOut()\n    .then(() => {\n      localStorage.removeItem(\"token\");\n      dispatch(signOutSucces());\n      history.push(\"/auth/login\");\n    })\n    .catch((error) => {\n      dispatch(signOutError(error.response));\n    });\n};\n\nexport const uploadPhoto = (data) => (dispatch) => {\n  dispatch(setAvatarLoading(true));\n  const { file, userId } = data;\n  const imageStorage = firebase.storage().ref(\"/images\").child(userId);\n  const db = firebase.firestore().collection(\"users\").doc(userId);\n  imageStorage.put(file).then(() => {\n    imageStorage\n      .getDownloadURL()\n      .then((url) => {\n        db.update({ photoUrl: url });\n        dispatch(setPhoto(url));\n        dispatch(setAvatarLoading(false));\n      })\n      .catch((error) => {\n        console.log(\"Error\", error);\n        dispatch(setAvatarLoading(false));\n      });\n  });\n};\n\nexport const updatePhoto = (ID, photoUrl) => async (dispatch) => {\n  const user = await getUserInfo(ID.userId);\n  const topic = firebase.firestore().collection(\"blog\");\n  const messages = firebase\n    .firestore()\n    .collection(\"blog\")\n    .doc(ID.topic)\n    .collection(\"messages\");\n  messages.get().then((res) => {\n    res.docs.forEach((item) => {\n      if (item.data().userId === user.id) {\n        messages.doc(item.id).update({\n          photoUrl: user.photoUrl,\n        });\n      }\n    });\n    dispatch(getMessages(ID.topic));\n  });\n  topic.get().then((res) => {\n    res.docs.forEach((item) => {\n      if (item.data().id === user.id) {\n        topic.doc(item.id).update({\n          photoUrl: user.photoUrl,\n        });\n      }\n    });\n    dispatch(getTopicInfo(ID.topic));\n  });\n};\n","/Users/dzianis/Movie-Project/client/src/store/actions/blogAction.js",[],"/Users/dzianis/Movie-Project/client/src/store/actions/movieAction.js",["358","359","360","361"],"import axios from \"axios\";\nimport {\n  SET_TV,\n  SET_MOVIES,\n  SET_ERROR,\n  SET_MOVIE_TO_LIBRARY,\n  SET_GENRES,\n  SET_SEARCH_MOVIES,\n  SET_MOVIE_RATE,\n  SET_NOTIFICATION,\n  SET_RATE_MOVIES,\n  SET_RATE_TV,\n} from \"./../constants\";\nimport { MOVIE } from \"./../api\";\nimport { setLoading, setNotificationLoading } from \"./loadingAction\";\nimport { setInputs } from \"./searchAction\";\n\nexport const setRateMovies = (payload) => ({ type: SET_RATE_MOVIES, payload });\nexport const setRateTv = (payload) => ({ type: SET_RATE_TV, payload });\nexport const setMovies = (payload) => ({ type: SET_MOVIES, payload });\nexport const setRate = (payload) => ({ type: SET_MOVIE_RATE, payload });\nexport const setNotification = (payload) => ({\n  type: SET_NOTIFICATION,\n  payload,\n});\nexport const setTV = (payload) => ({ type: SET_TV, payload });\nexport const setGenres = (payload) => ({ type: SET_GENRES, payload });\nexport const setError = (payload) => ({ type: SET_ERROR, payload });\nexport const setSearchMovies = (payload) => ({\n  type: SET_SEARCH_MOVIES,\n  payload,\n});\nexport const setMovieToLibraryAction = (payload) => ({\n  type: SET_MOVIE_TO_LIBRARY,\n  payload,\n});\n\nexport const getMovies = (page) => (dispatch) => {\n  axios\n    .get(MOVIE.GET_POPULAR_MOVIES(page))\n    .then((result) => {\n      dispatch(setMovies(result.data));\n    })\n    .catch((error) => {\n      dispatch(setError(error.response.data.errors[0]));\n    });\n};\nexport const getTV = (page) => (dispatch) => {\n  dispatch(setLoading(true));\n  axios\n    .get(MOVIE.GET_POPULAR_TV(page))\n    .then((result) => {\n      dispatch(setTV(result.data));\n      dispatch(setLoading(false));\n    })\n    .catch((error) => {\n      dispatch(setError(error.response.data.errors[0]));\n    });\n};\n\nexport const setMovieToLibrary = (id, title, poster) => (dispatch) => {\n  if (localStorage.getItem(\"library\") === null) {\n    const library = [];\n    library.push({ id, title, poster });\n    localStorage.setItem(\"library\", JSON.stringify(library));\n    dispatch(setMovieToLibraryAction(library));\n  } else {\n    const library = JSON.parse(localStorage.getItem(\"library\")).filter(\n      (element) => {\n        return +element.id !== +id;\n      }\n    );\n    library.push({ id, title: title, poster });\n    localStorage.setItem(\"library\", JSON.stringify(library));\n    dispatch(setMovieToLibraryAction(library));\n  }\n};\n\nexport const getLibraryList = () => (dispatch) => {\n  if (localStorage.getItem(\"library\") !== null) {\n    const library = JSON.parse(localStorage.getItem(\"library\"));\n    dispatch(setMovieToLibraryAction(library));\n  }\n};\n\nexport const removeItemFromLibrary = (id) => (dispatch) => {\n  const library = JSON.parse(localStorage.getItem(\"library\")).filter(\n    (item) => +item.id !== +id\n  );\n  localStorage.setItem(\"library\", JSON.stringify(library));\n  dispatch(setMovieToLibraryAction(library));\n};\n\nexport const getGenres = (type) => (dispatch) => {\n  dispatch(setLoading(true));\n  axios\n    .get(MOVIE.GET_GENRES(type))\n    .then((result) => {\n      dispatch(setGenres(result.data.genres));\n      dispatch(setLoading(false));\n    })\n    .catch((error) => {\n      dispatch(setError(error.response.data.errors[0]));\n      dispatch(setLoading(false));\n    });\n};\n\nexport const searchMovies = (data, history) => (dispatch) => {\n  dispatch(setLoading(true));\n  const {\n    title,\n    average,\n    idList,\n    adultCheckbox,\n    popularity,\n    overview,\n    searchCheckbox,\n  } = data;\n  if (searchCheckbox) {\n    dispatch(\n      setInputs({\n        title,\n        average,\n        idList,\n        adultCheckbox,\n        popularity,\n        overview,\n      })\n    );\n  }\n  if (title) {\n    axios\n      .get(MOVIE.SEARCH_MOVIE_BY_TITLE(), {\n        params: { include_adult: adultCheckbox, page: 1, query: title },\n      })\n      .then((result) => {\n        dispatch(setSearchMovies(result.data));\n        history.push(\"search\");\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setError(error.response));\n        dispatch(setLoading(false));\n      });\n  } else {\n    axios\n      .get(MOVIE.SEARCH_MOVIE(), {\n        params: {\n          include_adult: adultCheckbox,\n          page: 1,\n          [\"vote_count.gte\"]: popularity,\n          [\"vote_average.gte\"]: average,\n          with_genres: Array.from(idList.keys()).join(),\n        },\n      })\n      .then((result) => {\n        dispatch(setSearchMovies(result.data));\n        history.push(\"search\");\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setError(error.response));\n        dispatch(setLoading(false));\n      });\n  }\n  dispatch(setLoading(false));\n};\n\nexport const searchTV = (data, history) => (dispatch) => {\n  dispatch(setLoading(true));\n  const {\n    title,\n    average,\n    idList,\n    adultCheckbox,\n    popularity,\n    searchCheckbox,\n    overview,\n  } = data;\n  if (searchCheckbox) {\n    dispatch(\n      setInputs({\n        title,\n        average,\n        idList,\n        adultCheckbox,\n        popularity,\n        overview,\n      })\n    );\n  }\n  if (title) {\n    axios\n      .get(MOVIE.SEARCH_TV_BY_TITLE(), {\n        params: { include_adult: adultCheckbox, page: 1, query: title },\n      })\n      .then((result) => {\n        dispatch(setSearchMovies(result.data));\n        history.push(\"search\");\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setError(error.response));\n        dispatch(setLoading(false));\n      });\n  } else {\n    axios\n      .get(MOVIE.SEARCH_TV(), {\n        params: {\n          include_adult: adultCheckbox,\n          page: 1,\n          [\"vote_count.gte\"]: popularity,\n          [\"vote_average.gte\"]: average,\n          with_genres: Array.from(idList.keys()).join(),\n        },\n      })\n      .then((result) => {\n        dispatch(setSearchMovies(result.data));\n        history.push(\"search\");\n        dispatch(setLoading(false));\n      })\n      .catch((error) => {\n        dispatch(setError(error.response));\n        dispatch(setLoading(false));\n      });\n  }\n  dispatch(setLoading(false));\n};\n\nexport const setMovieRate = (id, value) => (dispatch) => {\n  dispatch(setNotificationLoading(true));\n  axios\n    .post(MOVIE.SET_RATING_MOVIE(id), {\n      value: value,\n    })\n    .then((res) => {\n      dispatch(\n        setNotification({ error: false, message: res.data.status_message })\n      );\n      dispatch(setNotificationLoading(false));\n    })\n    .catch((error) => {\n      dispatch(\n        setNotification({\n          error: true,\n          message: error.response.data.status_message,\n        })\n      );\n      dispatch(setNotificationLoading(false));\n    });\n};\n\nexport const setTvRate = (id, value) => (dispatch) => {\n  dispatch(setNotificationLoading(true));\n  axios\n    .post(MOVIE.SET_RATING_TV(id), {\n      value: value,\n    })\n    .then((res) => {\n      dispatch(\n        setNotification({ error: false, message: res.data.status_message })\n      );\n      dispatch(setNotificationLoading(false));\n    })\n    .catch((error) => {\n      dispatch(\n        setNotification({\n          error: true,\n          message: error.response.data.status_message,\n        })\n      );\n      dispatch(setNotificationLoading(false));\n    });\n};\n\nexport const getRateMovies = (page) => (dispatch) => {\n  dispatch(setLoading(true));\n  axios\n    .get(MOVIE.GET_RATED_MOVIES(page))\n    .then((result) => {\n      const average =\n        result.data.results.length &&\n        result.data.results.reduce((accum, current) => {\n          return accum + current.rating;\n        }, 0) / result.data.results.length;\n      dispatch(\n        setRateMovies({ movies: result.data.results, myAverageMovies: average })\n      );\n      dispatch(setLoading(false));\n    })\n    .catch((error) => {\n      dispatch(setError(error.response.data.status_message));\n      dispatch(setLoading(false));\n    });\n};\n\nexport const getRateTv = (page) => (dispatch) => {\n  dispatch(setLoading(true));\n  axios\n    .get(MOVIE.GET_RATED_TV(page))\n    .then((result) => {\n      const average =\n        result.data.results.length &&\n        result.data.results.reduce((accum, current) => {\n          return accum + current.rating;\n        }, 0) / result.data.results.length;\n      dispatch(setRateTv({ tv: result.data.results, myAverageTv: average }));\n      dispatch(setLoading(false));\n    })\n    .catch((error) => {\n      dispatch(setError(error.response.data.status_message));\n      dispatch(setLoading(false));\n    });\n};\n","/Users/dzianis/Movie-Project/client/src/view/utils/validate.js",[],"/Users/dzianis/Movie-Project/client/src/view/utils/functions.js",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/CreateTopic/CreateTopic.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/TopicPage/TopicPage.jsx",["362"],"import React, { Component } from \"react\";\nimport TopicMessage from \"./../TopicMessage/TopicMessage\";\nimport {\n  Card,\n  Box,\n  Button,\n  withStyles,\n  Badge,\n  CardHeader,\n  Breadcrumbs,\n  TextField,\n  Typography,\n  CardContent,\n  CardActions,\n  Avatar,\n  IconButton,\n  LinearProgress,\n} from \"@material-ui/core\";\n\nimport { TopicPageStyle } from \"./TopicPageStyle\";\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport ThumbDownAltOutlinedIcon from \"@material-ui/icons/ThumbDownAltOutlined\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { compose } from \"redux\";\nimport { setDefaultAvatar, FormatDate } from \"./../../../../utils/functions\";\n\nclass TopicPage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      message: \"\",\n    };\n  }\n  componentDidMount() {\n    const userId = localStorage.getItem(\"token\");\n    this.props.updatePhoto(\n      { topic: this.props.match.params.id, userId: userId },\n      this.props.photoUrl\n    );\n  }\n  changeHandler = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.sendMessage(this.props.userId, this.props.match.params.id, {\n      ...this.state,\n      fName: this.props.firstName,\n      lName: this.props.lastName,\n    });\n  };\n  likeHandler = (data) => {\n    const {\n      e,\n      type,\n      changedType,\n      likes,\n      disLikes,\n      changedValue,\n      notChangedValue,\n    } = data;\n    e.target.id &&\n      this.props.updateLikesInHeader(\n        {\n          topic: this.props.match.params.id,\n          user: this.props.userId,\n        },\n        {\n          type: type,\n          likes: likes,\n          disLikes: disLikes,\n          changed: {\n            changedType: type,\n            changedValue: changedValue,\n            notChangedType: changedType,\n            notChangedValue: notChangedValue,\n          },\n        }\n      );\n  };\n  showMessages = () => {\n    return this.props.messages.map((item) => {\n      return (\n        <TopicMessage\n          key={item.id}\n          userId={item.userId}\n          myId={this.props.userId}\n          fName={item.fName}\n          lName={item.lName}\n          message={item.message}\n          likes={item.likes}\n          disLikes={item.disLikes}\n          id={item.id}\n          date={item.date}\n          updateMessagesLikes={this.props.updateMessagesLikes}\n          isMessageLoading={this.props.isMessageLoading}\n          deleteMessage={this.props.deleteMessage}\n          photoUrl={item.photoUrl}\n        />\n      );\n    });\n  };\n  showAvatar = () => {\n    const { photoUrl, fName, lName } = this.props.topicInfo;\n    return (\n      <Avatar>\n        {photoUrl ? (\n          <img src={photoUrl} style={{ width: 40, height: 40 }} />\n        ) : (\n          <Typography\n            className={this.props.classes.avatarText}\n            variant=\"subtitle1\"\n          >\n            {setDefaultAvatar(fName, lName)}\n          </Typography>\n        )}\n      </Avatar>\n    );\n  };\n  render() {\n    const { classes, topicInfo, isLoading, isMessageLoading } = this.props;\n    if (isLoading || topicInfo === null) return <LinearProgress />;\n    return (\n      <Box className={classes.topicPage}>\n        <Breadcrumbs aria-label=\"breadcrumb\">\n          <Link to=\"/blog\">Blog</Link>\n          <Link to=\"/blog/topics\">Topics</Link>\n          <Typography color=\"textPrimary\">{topicInfo.title}</Typography>\n        </Breadcrumbs>\n        <Card className={classes.root}>\n          <CardHeader\n            className={classes.headerCard}\n            avatar={this.showAvatar()}\n            action={\n              <IconButton aria-label=\"settings\">\n                <MoreVertIcon />\n              </IconButton>\n            }\n            title={topicInfo.title}\n            subheader={`published by ${topicInfo.fName} ${\n              topicInfo.lName\n            }, ${FormatDate(topicInfo.dateTime.toDate())}`}\n          />\n          <CardContent>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              {topicInfo.description}\n            </Typography>\n          </CardContent>\n          <CardActions className={classes.footerCard} disableSpacing>\n            <IconButton\n              className={classes.footerAction}\n              aria-label=\"add to favorites\"\n              id={topicInfo.topicId}\n              onClick={(e) =>\n                this.likeHandler({\n                  e: e,\n                  type: \"likes\",\n                  changedType: \"disLikes\",\n                  likes: topicInfo.likes + 1,\n                  disLikes: topicInfo.disLikes,\n                  changedValue: topicInfo.likes,\n                  notChangedValue: topicInfo.disLikes,\n                })\n              }\n              disabled={isMessageLoading}\n            >\n              <Badge\n                color=\"secondary\"\n                badgeContent={topicInfo.likes}\n                className={classes.stylesBadge}\n                showZero\n                id={topicInfo.topicId}\n              >\n                <ThumbUpAltOutlinedIcon\n                  className={classes.iconBtnwithBudge}\n                  id={topicInfo.topicId}\n                />\n              </Badge>\n            </IconButton>\n\n            <IconButton\n              className={classes.footerAction}\n              aria-label=\"add to favorites\"\n              id={topicInfo.topicId}\n              onClick={(e) =>\n                this.likeHandler({\n                  e: e,\n                  type: \"disLikes\",\n                  changedType: \"likes\",\n                  likes: topicInfo.likes,\n                  disLikes: topicInfo.disLikes + 1,\n                  changedValue: topicInfo.disLikes,\n                  notChangedValue: topicInfo.likes,\n                })\n              }\n              disabled={isMessageLoading}\n            >\n              <Badge\n                color=\"secondary\"\n                className={classes.stylesBadge}\n                badgeContent={topicInfo.disLikes}\n                style={{ padding: 7 }}\n                showZero\n                id={topicInfo.topicId}\n              >\n                <ThumbDownAltOutlinedIcon\n                  className={classes.iconBtnwithBudge}\n                  id={topicInfo.topicId}\n                />\n              </Badge>\n            </IconButton>\n          </CardActions>\n        </Card>\n        <Box className={classes.messagesBox}>\n          <Box className={classes.messages}>{this.showMessages()}</Box>\n          <Box className={classes.btnBox}>\n            <form className={classes.formSubmit} onSubmit={this.handleSubmit}>\n              <TextField\n                id=\"message\"\n                label=\"Enter message...\"\n                multiline\n                rows={4}\n                variant=\"outlined\"\n                className={classes.replyTextarea}\n                onChange={this.changeHandler}\n              />\n              <Button\n                className={classes.replyBtn}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={this.handleSubmit}\n              >\n                Send\n              </Button>\n            </form>\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default compose(\n  withStyles(TopicPageStyle, { withTheme: true }),\n  withRouter\n)(TopicPage);\n","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Profile/Profile.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Topics/Topics.jsx",["363"],"import React, { Component } from \"react\";\nimport BlogCard from \"./../BlogCard/BlogCard\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { Box, withStyles } from \"@material-ui/core\";\nimport { TopicsStyle } from \"./TopicsStyle\";\nimport NotFound from \"./../../../../utils/NotFound/NotFound\";\n\nclass Topics extends Component {\n  constructor() {\n    super();\n    this.state = {};\n  }\n  componentDidMount() {\n    this.props.getTopics();\n  }\n  showTopics = () =>\n    this.props.topics.map((item) => (\n      <BlogCard\n        key={item.id}\n        id={item.id}\n        title={item.title}\n        description={item.description}\n        date={item.date}\n        lastMessageDate={item.lastMessage}\n        fName={item.MessageFName}\n        lName={item.MessageLName}\n        lastMessageDate={item.lastMessageDate}\n      />\n    ));\n  render() {\n    const { classes, isLoading } = this.props;\n    return isLoading ? (\n      <CircularProgress />\n    ) : (\n      <Box className={classes.topicsBox}>\n        {this.props.topics.length ? this.showTopics() : <NotFound />}\n      </Box>\n    );\n  }\n}\n\nexport default withStyles(TopicsStyle, { withTheme: true })(Topics);\n","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Sidebar/Sidebar.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/Navigation/Navigation.jsx",[],"/Users/dzianis/Movie-Project/client/src/store/actions/loadingAction.js",[],"/Users/dzianis/Movie-Project/client/src/store/api.js",[],"/Users/dzianis/Movie-Project/client/src/store/actions/searchAction.js",[],"/Users/dzianis/Movie-Project/client/src/store/services/BlogTopicService.js",[],"/Users/dzianis/Movie-Project/client/src/store/services/BlogMessageService.js",[],"/Users/dzianis/Movie-Project/client/src/store/actions/detailsAction.js",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/Navigation/NavigationStyle.js",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/RouteContent/RouteContent.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Profile/Profile.jsx",["364"],"import React, { Component } from \"react\";\nimport Panel from \"../Blog/components/Profile/components/Panel/Panel\";\nimport CircularProgressWithLabel from \"./../Blog/components/Profile/components/CircularLabel/CircularLabel\";\nimport PhotoCamera from \"@material-ui/icons/PhotoCamera\";\nimport {\n  Chip,\n  Typography,\n  IconButton,\n  CircularProgress,\n  Box,\n  Avatar,\n  Divider,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemAvatar,\n  withStyles,\n} from \"@material-ui/core\";\nimport { setDefaultAvatar } from \"./../../utils/functions\";\nimport { getRateMovies, getRateTv } from \"./../../../store/actions/movieAction\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { ProfileStyle } from \"./ProfileStyle\";\nimport { uploadPhoto } from \"../../../store/actions/authAction\";\n\nconst headerUrl = \"https://reactapp.ir/wp-content/uploads/reactjs.jpg\";\nclass Profile extends Component {\n  componentDidMount() {\n    this.props.getRateMovies(1);\n    this.props.getRateTv(1);\n  }\n  fileChanged = (e) => {\n    if (e.target.files.length) {\n      this.props.uploadPhotos({\n        file: e.target.files[0],\n        userId: this.props.userId,\n      });\n    }\n  };\n  showAvatar = () => {\n    return this.props.isAvatarLoading ? (\n      <CircularProgress\n        style={{ width: \"200px\", height: \"200px\" }}\n        className={this.props.classes.avatarLoading}\n      />\n    ) : (\n      <Avatar className={this.props.classes.avatar}>\n        {this.props.photoUrl ? (\n          <img\n            src={this.props.photoUrl}\n            className={this.props.classes.profilePhoto}\n          />\n        ) : (\n          <Typography className={this.props.classes.avatarText} variant=\"h1\">\n            {setDefaultAvatar(this.props.firstName, this.props.lastName)}\n          </Typography>\n        )}\n      </Avatar>\n    );\n  };\n  render() {\n    const {\n      classes,\n      firstName,\n      lastName,\n      email,\n      myAverageTv,\n      myAverageMovies,\n    } = this.props;\n    return (\n      <Box className={classes.profile}>\n        <Box\n          className={classes.header}\n          style={{\n            backgroundImage: `url(${headerUrl}}`,\n          }}\n        ></Box>\n        <Box className={classes.content}>\n          <Box className={classes.profileInfo}>\n            {this.showAvatar()}\n            <Box className={classes.uploadAvatar}>\n              <input\n                className={classes.uploadAvatarInput}\n                id=\"icon-button-file\"\n                type=\"file\"\n                onChange={this.fileChanged}\n              />\n              <label htmlFor=\"icon-button-file\">\n                <IconButton\n                  color=\"primary\"\n                  aria-label=\"upload picture\"\n                  component=\"span\"\n                >\n                  <PhotoCamera />\n                </IconButton>\n              </label>\n            </Box>\n            <Box className={classes.fullName}>\n              <Typography className={classes.avatarText} variant=\"h4\">\n                {firstName} {lastName}\n              </Typography>\n            </Box>\n            <Box className={classes.email}>\n              <Chip\n                size=\"small\"\n                avatar={\n                  <Avatar> {setDefaultAvatar(firstName, lastName)}</Avatar>\n                }\n                label={email}\n              />\n            </Box>\n            <Box className={classes.totalRatings}>\n              <Typography className={classes.avatarText} variant=\"h5\">\n                Total ratings:{\" \"}\n                {this.props.rateTv.length + this.props.rateMovies.length}\n              </Typography>\n              <List className={classes.root}>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar className={classes.listAvatar}>\n                      <CircularProgressWithLabel\n                        className={classes.circularLabel}\n                        value={myAverageMovies * 10}\n                      />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText primary=\"Average movie rating\" />\n                </ListItem>\n                <Divider variant=\"inset\" component=\"li\" />\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar className={classes.listAvatar}>\n                      <CircularProgressWithLabel\n                        className={classes.circularLabel}\n                        value={myAverageTv * 10}\n                      />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText primary=\" Average tv rating\" />\n                </ListItem>\n                <Divider variant=\"inset\" component=\"li\" />\n              </List>\n            </Box>\n          </Box>\n          <Box className={classes.profileNav}>\n            <Panel\n              rateTv={this.props.rateTv}\n              rateMovies={this.props.rateMovies}\n              className={classes.homePanel}\n            />\n          </Box>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userId: state.AuthReducer.userId,\n    firstName: state.AuthReducer.firstName,\n    lastName: state.AuthReducer.lastName,\n    photoUrl: state.AuthReducer.photoUrl,\n    email: state.AuthReducer.email,\n    rateMovies: state.MoviesReducer.rateMovies,\n    rateTv: state.MoviesReducer.rateTv,\n    myAverageMovies: state.MoviesReducer.myAverageMovies,\n    myAverageTv: state.MoviesReducer.myAverageTv,\n    isAvatarLoading: state.LoadingReducer.isAvatarLoading,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  getRateMovies: (page) => dispatch(getRateMovies(page)),\n  getRateTv: (page) => dispatch(getRateTv(page)),\n  uploadPhotos: (data) => dispatch(uploadPhoto(data)),\n});\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),\n  withStyles(ProfileStyle, { withTheme: true })\n)(Profile);\n","/Users/dzianis/Movie-Project/client/src/view/Pages/Details/Details.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/SearchPage/SearchPage.jsx",["365"],"import React, { Component } from \"react\";\nimport SearchCard from \"./components/SearchCard/SearchCard\";\nimport { connect } from \"react-redux\";\nimport {\n  getLibraryList,\n  removeItemFromLibrary,\n  setMovieRate,\n  setMovieToLibrary,\n  setTvRate,\n} from \"../../../store/actions/movieAction\";\nimport Loading from \"../../utils/Loading/Loading\";\nimport NotFound from \"../../utils/NotFound/NotFound\";\n\nclass SearchPage extends Component {\n  showMovies = () => {\n    if (this.props.searchMovies.length) {\n      return this.props.searchMovies.map((item) => (\n        <SearchCard\n          setTvRate={this.props.setTvRate}\n          key={item.id}\n          id={item.id}\n          popularity={item.vote_count}\n          poster={item.poster_path}\n          titleMovie={item.title}\n          titleTv={item.original_name}\n          type={item.title ? \"movie\" : \"tv\"}\n          vote={item.vote_average}\n          popularity={item.popularity}\n          library={this.props.library}\n          getLibraryList={this.props.getLibraryList}\n          setMovieToLibrary={this.props.setMovieToLibrary}\n          removeItemFromLibrary={this.props.removeItemFromLibrary}\n          setMovieRate={this.props.setMovieRate}\n        />\n      ));\n    }\n    return <NotFound title=\"Not Found\" />;\n  };\n  render() {\n    return <>{this.props.isLoading ? <Loading /> : this.showMovies()}</>;\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  searchMovies: state.MoviesReducer.searchMovies,\n  library: state.MoviesReducer.library,\n  isLoading: state.LoadingReducer.isLoading,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  getLibraryList: () => dispatch(getLibraryList()),\n  setMovieToLibrary: (id, title, poster) =>\n    dispatch(setMovieToLibrary(id, title, poster)),\n  removeItemFromLibrary: (id) => dispatch(removeItemFromLibrary(id)),\n  setMovieRate: (id, value) => dispatch(setMovieRate(id, value)),\n  setTvRate: (id, value) => dispatch(setTvRate(id, value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);\n","/Users/dzianis/Movie-Project/client/src/view/Pages/Movie/Movie.jsx",["366"],"import React, { Component } from \"react\";\nimport PosterCard from \"./../components/PosterCard/PosterCard\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { connect } from \"react-redux\";\nimport { getGenres, getMovies, setMovieRate } from \"./../../../store/actions/movieAction\";\nclass Movie extends Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: false,\n    };\n    this.loader = React.createRef();\n  }\n  componentDidMount() {\n    this.props.getGenres(\"movie\");\n    const options = {\n      root: null,\n      rootMargin: \"0px\",\n      threshold: 0.25,\n    };\n    this.observer = new IntersectionObserver(this.loadMore, options);\n    if (this.loader && this.loader.current) {\n      this.observer.observe(this.loader.current);\n    }\n  }\n  componentWillUnmount() {\n    this.observer.unobserve(this.loader.current);\n  }\n  loadMore = (entries) => {\n    this.setState({\n      isLoading: true,\n    });\n    const target = entries[0];\n    if (target.isIntersecting) {\n      this.props.getMovies(this.props.moviesCurrentPage + 1);\n      this.setState({\n        isLoading: false,\n      });\n    }\n  };\n\n  showMovies = () => {\n    if (this.props.movies.length) {\n      return this.props.movies.map((item) => (\n        <PosterCard\n          type=\"movie\"\n          to=\"/home/details/movies\"\n          key={item.id}\n          id={item.id}\n          poster={item.poster_path}\n          title={item.title}\n          vote={item.vote_average}\n          getDetalis={this.props.getDetailsMovie}\n          getSimilar={this.props.getSimilarMovies}\n          setRate={this.props.setMovieRate}\n        />\n      ));\n    }\n  };\n  render() {\n    return (\n      <>\n        {this.showMovies()}\n        <div\n          style={{\n            display: this.state.isLoading ? \"flex\" : \"none\",\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            padding: \"20px\",\n          }}\n          ref={this.loader}\n        >\n          {this.state.isLoading && <CircularProgress />}\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  movies: state.MoviesReducer.movies,\n  moviesCurrentPage: state.MoviesReducer.moviesCurrentPage,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getMovies: (page) => dispatch(getMovies(page)),\n  getGenres: (type) => dispatch(getGenres(type)),\n  setMovieRate: (id, value) => dispatch(setMovieRate(id, value)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Movie);\n","/Users/dzianis/Movie-Project/client/src/view/Pages/Library/Library.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/utils/NotFound/NotFound.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/components/PosterCard/PosterCard.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Library/components/LibraryCard.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Library/components/LibraryCardStyles.js",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/components/PosterCard/PosterCardStyle.js",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/components/Rating/Rating.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/components/Rating/RatingStyle.js",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Details/DetailsStyle.js",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Profile/ProfileStyle.js",["367"],"export const ProfileStyle = (theme) => ({\n  profile: {\n    width: \"100%\",\n    minHeight: \"100vh\",\n  },\n  content: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: 40,\n    color: \"#fff\",\n    textAlign: \"center\",\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      height: \"100%\",\n      padding: 0,\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n  },\n  avatar: {\n    width: 200,\n    height: 200,\n    marginTop: -140,\n  },\n  header: {\n    height: \"200px\",\n    backgroundPosition: \"center\",\n  },\n  profileInfo: {\n    width: \"30%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  profileNav: {\n    width: \"70%\",\n    backgroundColor: \"#fff\",\n  },\n  totalRatings: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  totalTv: {\n    display: \"flex\",\n  },\n  totalMovie: {\n    display: \"flex\",\n  },\n  listAvatar: {\n    backgroundColor: \"#efefef\",\n  },\n  totalRatings: {\n    marginTop: 20,\n    textAlign: \"center\",\n  },\n  uploadAvatarInput: {\n    display: \"none\",\n  },\n  profilePhoto: {\n    height: \"100%\",\n    width: \"100%\",\n  },\n  avatarLoading: {\n    marginTop: \"-140px\",\n  },\n  homePanel: {\n    backgroundColor: \"#fff\",\n  },\n});\n","/Users/dzianis/Movie-Project/client/src/view/utils/Loading/Loading.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/SearchPage/components/SearchCard/SearchCard.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Details/components/SimilarMovies/SimilarMovies.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Profile/components/Panel/Panel.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Profile/components/CircularLabel/CircularLabel.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Sidebar/BlogIcons.js",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Topics/TopicsStyle.js",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Profile/ProfileStyle.js",["368"],"export const ProfileStyle = (theme) => ({\n  profile: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  content: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: 40,\n    [theme.breakpoints.down(\"sm\")]: {\n      width: \"100%\",\n      height: \"100%\",\n      padding: 0,\n      flexDirection: \"column\",\n      alignItems: \"center\",\n    },\n  },\n  avatar: {\n    width: 200,\n    height: 200,\n    marginTop: -140,\n  },\n  header: {\n    height: \"200px\",\n    backgroundPosition: \"center\",\n  },\n  profileInfo: {\n    width: \"30%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  profileNav: {\n    width: \"70%\",\n  },\n  totalRatings: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  totalTv: {\n    display: \"flex\",\n  },\n  totalMovie: {\n    display: \"flex\",\n  },\n  listAvatar: {\n    backgroundColor: \"#efefef\",\n  },\n  totalRatings: {\n    marginTop: 20,\n    textAlign: \"center\"\n  }\n});\n","/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/Sidebar/SideBar.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/NavBar/NavBar.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/BlogCard/BlogCard.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/TopicPage/TopicPageStyle.js",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Profile/components/Panel/PanelStyle.js",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Details/components/SimilarMovies/SimilarMoviesStyle.js",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/SearchPage/components/SearchCard/SearchCardStyle.js",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Profile/components/RatedCard/RatedCard.jsx",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/TopicMessage/TopicMessage.jsx",["369"],"import React, { Component } from \"react\";\nimport ThumbUpAltOutlinedIcon from \"@material-ui/icons/ThumbUpAltOutlined\";\nimport ThumbDownAltOutlinedIcon from \"@material-ui/icons/ThumbDownAltOutlined\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport {\n  Menu,\n  MenuItem,\n  Card,\n  CardHeader,\n  CardContent,\n  CardActions,\n  Avatar,\n  IconButton,\n  Typography,\n  withStyles,\n  Badge,\n} from \"@material-ui/core\";\nimport { TopicMessageStyle } from \"./TopicMessageStyle\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { setDefaultAvatar, FormatDate } from \"./../../../../utils/functions\";\n\nconst ITEM_HEIGHT = 48;\n\nclass TopicMessage extends Component {\n  constructor() {\n    super();\n    this.state = {\n      anchorEl: null,\n    };\n  }\n  handleClick = (e) => {\n    this.setState({\n      anchorEl: e.currentTarget,\n    });\n  };\n  likeHandler = (data) => {\n    const {\n      e,\n      type,\n      changedType,\n      likes,\n      disLikes,\n      changedValue,\n      notChangedValue,\n    } = data;\n    e.target.id &&\n      this.props.updateMessagesLikes(\n        {\n          message: e.target.id,\n          topic: this.props.match.params.id,\n          user: this.props.myId,\n        },\n        {\n          type: type,\n          likes: likes,\n          disLikes: disLikes,\n          changed: {\n            changedType: type,\n            changedValue: changedValue,\n            notChangedType: changedType,\n            notChangedValue: notChangedValue,\n          },\n        }\n      );\n  };\n  deleteHandler = (e) => {\n    this.props.deleteMessage({\n      topic: this.props.match.params.id,\n      message: e.target.id,\n    });\n  };\n  handleClose = () => {\n    this.setState({\n      anchorEl: null,\n    });\n  };\n  getOptions = () => {\n    const option = [\n      {\n        name: \"Delete\",\n      },\n    ];\n    if (this.props.myId === this.props.userId) {\n      return option.map((option) => (\n        <div key={this.props.id}>\n          <IconButton\n            aria-label=\"more\"\n            aria-controls=\"long-menu\"\n            aria-haspopup=\"true\"\n            onClick={this.handleClick}\n          >\n            <MoreVertIcon />\n          </IconButton>\n          <Menu\n            id=\"long-menu\"\n            anchorEl={this.state.anchorEl}\n            keepMounted\n            open={Boolean(this.state.anchorEl)}\n            onClose={this.handleClose}\n            PaperProps={{\n              style: {\n                maxHeight: ITEM_HEIGHT * 4.5,\n                width: \"20ch\",\n              },\n            }}\n          >\n            <MenuItem id={this.props.id} onClick={this.deleteHandler}>\n              {option.name}\n            </MenuItem>\n          </Menu>\n        </div>\n      ));\n    }\n  };\n  showAvatar = () => {\n    return (\n      <Avatar>\n        {this.props.photoUrl ? (\n          <img\n            src={this.props.photoUrl}\n            className={this.props.classes.profilePhoto}\n            style={{ width: 40, height: 40 }}\n          />\n        ) : (\n          <Typography\n            className={this.props.classes.avatarText}\n            variant=\"subtitle1\"\n          >\n            {setDefaultAvatar(this.props.fName, this.props.lName)}\n          </Typography>\n        )}\n      </Avatar>\n    );\n  };\n  render() {\n    const {\n      classes,\n      fName,\n      lName,\n      message,\n      likes,\n      disLikes,\n      id,\n      date,\n      isMessageLoading,\n    } = this.props;\n    return (\n      <Card className={classes.root}>\n        <CardHeader\n          className={classes.headerCard}\n          avatar={this.showAvatar()}\n          action={this.getOptions()}\n          title={`reply by ${fName} ${lName},`}\n          subheader={FormatDate(date.toDate())}\n        />\n        <CardContent>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {message}\n          </Typography>\n        </CardContent>\n        <CardActions className={classes.footerCard} disableSpacing>\n          <IconButton\n            className={classes.footerAction}\n            aria-label=\"add to favorites\"\n            id={id}\n            onClick={(e) =>\n              this.likeHandler({\n                e: e,\n                type: \"likes\",\n                changedType: \"disLikes\",\n                likes: this.props.likes + 1,\n                disLikes: this.props.disLikes,\n                changedValue: this.props.likes,\n                notChangedValue: this.props.disLikes,\n              })\n            }\n            disabled={isMessageLoading}\n          >\n            <Badge\n              color=\"secondary\"\n              badgeContent={likes}\n              className={classes.stylesBadge}\n              showZero\n            >\n              <ThumbUpAltOutlinedIcon\n                className={classes.iconBtnwithBudge}\n                id={id}\n              />\n            </Badge>\n          </IconButton>\n\n          <IconButton\n            className={classes.footerAction}\n            aria-label=\"add to favorites\"\n            id={id}\n            onClick={(e) =>\n              this.likeHandler({\n                e: e,\n                type: \"disLikes\",\n                changedType: \"likes\",\n                likes: this.props.likes,\n                disLikes: this.props.disLikes + 1,\n                changedValue: this.props.disLikes,\n                notChangedValue: this.props.likes,\n              })\n            }\n            disabled={isMessageLoading}\n          >\n            <Badge\n              color=\"secondary\"\n              className={classes.stylesBadge}\n              badgeContent={disLikes}\n              style={{ padding: 7 }}\n              showZero\n            >\n              <ThumbDownAltOutlinedIcon\n                id={id}\n                className={classes.iconBtnwithBudge}\n              />\n            </Badge>\n          </IconButton>\n        </CardActions>\n      </Card>\n    );\n  }\n}\n\nexport default compose(\n  withStyles(TopicMessageStyle, { withTheme: true }),\n  withRouter\n)(TopicMessage);\n","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/BlogCard/BlogCardStyle.js",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/Sidebar/SideBarIcons.js",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/CreateTopic/CreateTopicStyle.js",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/Profile/components/RatedCard/RatedCardStyle.js",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/NavBar/components/SearchForm/SearchForm.jsx",["370","371"],"import React, { Component } from \"react\";\nimport CustomizedSlider from \"./SliderStyle\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport {\n  Box,\n  withStyles,\n  Checkbox,\n  FormControlLabel,\n  Typography,\n  TextField,\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n} from \"@material-ui/core\";\nimport { SearchFormStyles } from \"./SearchFormStyle\";\n\nclass SearchForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      adultCheckbox: false,\n      idList: new Map(),\n      popularity: 50,\n      average: 1,\n      title: \"\",\n      overview: \"\",\n    };\n  }\n  componentDidMount() {\n    if (this.props.searchInputs) {\n      const {\n        title,\n        average,\n        idList,\n        adultCheckbox,\n        popularity,\n        overview,\n      } = this.props.searchInputs;\n      this.setState({\n        title,\n        average,\n        idList,\n        adultCheckbox,\n        popularity,\n        overview,\n      });\n    }\n  }\n  showCheckboxList = () =>\n    this.props.genres.map((item) => (\n      <FormControlLabel\n        key={item.id}\n        control={\n          <Checkbox\n            name={item.name}\n            color=\"primary\"\n            style={{ color: \"#565050\" }}\n            id={`${item.id}`}\n            className={this.props.classes.genreItemCheckbox}\n            checked={!!this.state.idList.get(`${item.id}`)}\n          />\n        }\n        label={item.name}\n        onChange={this.handleGenresChange}\n        className={this.props.classes.genreItem}\n      />\n    ));\n  changeHandler = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value,\n    });\n  };\n  handleCheckboxChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.checked,\n    });\n  };\n  handleGenresChange = (e) => {\n    this.setState((prevState) => ({\n      idList: prevState.idList.set(e.target.id, e.target.checked),\n    }));\n  };\n  handleClickOpen = () => {\n    this.setState({ open: true });\n  };\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handlePopularityChange = (event, value) => {\n    this.setState({ popularity: value });\n  };\n  handleAverageChange = (event, value) => {\n    this.setState({ average: value });\n  };\n\n  searchMovie = () => {\n    if (this.props.location === \"/home/movie\") {\n      this.props.searchMovies(this.state, this.props.history);\n    } else if (this.props.location === \"/home/tv\") {\n      this.props.searchTV(this.state, this.props.history);\n    }\n  };\n  clearInputs = () => {\n    this.setState({\n      open: false,\n      adultCheckbox: false,\n      idList: new Map(),\n      popularity: 50,\n      average: 1,\n      title: \"\",\n      overview: \"\",\n    });\n    this.props.setInputs(null);\n  };\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <div className={classes.search}>\n          <SearchIcon\n            onClick={this.handleClickOpen}\n            className={classes.searchIcon}\n          />\n          <Button\n            placeholder=\"Search…\"\n            className={classes.searchButton}\n            onClick={this.handleClickOpen}\n            id=\"searchText\"\n          >\n            Search...\n          </Button>\n        </div>\n        <Dialog\n          open={this.state.open}\n          onClose={this.handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <Box className={classes.dialogForm}>\n            <Box className={classes.title}>\n              <Typography component=\"h1\" className={classes.titleText}>\n                Title\n              </Typography>\n            </Box>\n            <Box className={classes.dialogBody}>\n              <DialogContent className={classes.dialogContent}>\n                <Box className={classes.header}>\n                  <Box className={classes.titleBox}>\n                    <Typography component=\"p\" className={classes.dialogText}>\n                      Title\n                    </Typography>\n                    <TextField\n                      className={classes.dialogInput}\n                      value={this.state.title}\n                      variant=\"outlined\"\n                      label=\"Title\"\n                      variant=\"outlined\"\n                      id=\"title\"\n                      onChange={this.changeHandler}\n                    />\n                  </Box>\n                  <Box className={classes.overBox}>\n                    <Typography component=\"p\" className={classes.dialogText}>\n                      Overview\n                    </Typography>\n                    <TextField\n                      className={classes.dialogInput}\n                      value={this.state.overview}\n                      variant=\"outlined\"\n                      label=\"Overview\"\n                      multiline\n                      rows={4}\n                      variant=\"outlined\"\n                      id=\"overview\"\n                      onChange={this.changeHandler}\n                    />\n                  </Box>\n                </Box>\n                <Box className={classes.footer}>\n                  <Box className={classes.progressPopularity}>\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          value=\"adult\"\n                          color=\"primary\"\n                          checked={this.state.adultCheckbox}\n                          style={{ color: \"#565050\" }}\n                          className={classes.adultCheckbox}\n                          id=\"adultCheckbox\"\n                        />\n                      }\n                      label=\"Adult\"\n                      onChange={this.handleCheckboxChange}\n                      className={classes.searchCheckbox}\n                    />\n                    <Typography component=\"p\" className={classes.dialogText}>\n                      Popularity\n                    </Typography>\n                    <CustomizedSlider\n                      key={`popularity-${this.state.popularity}`}\n                      defaultValue={this.state.popularity}\n                      min={50}\n                      max={5000}\n                      color=\"#9a7b07\"\n                      id=\"popularity\"\n                      onChange={this.handlePopularityChange}\n                    />\n                  </Box>\n                  <Box className={classes.progressAverage}>\n                    <Typography\n                      component=\"p\"\n                      className={classes.dialogText}\n                      style={{ marginTop: 20 }}\n                    >\n                      Vote average\n                    </Typography>\n                    <CustomizedSlider\n                      defaultValue={this.state.average}\n                      key={`average-${this.state.average}`}\n                      min={1}\n                      max={10}\n                      color=\"#0a8a26de\"\n                      id=\"average\"\n                      onChange={this.handleAverageChange}\n                    />\n                  </Box>\n                </Box>\n              </DialogContent>\n              <DialogActions className={classes.dialogActions}>\n                <Box className={classes.genreslist}>\n                  {this.showCheckboxList()}\n                </Box>\n                <Box>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        value=\"remember\"\n                        color=\"primary\"\n                        style={{ color: \"#565050\" }}\n                        className={classes.searchCheckbox}\n                        id=\"searchCheckbox\"\n                      />\n                    }\n                    label=\"Remember inputs\"\n                    onChange={this.handleCheckboxChange}\n                    className={classes.searchCheckbox}\n                  />\n                  <Button\n                    color=\"primary\"\n                    className={classes.searchBtn}\n                    onClick={this.searchMovie}\n                  >\n                    Search\n                  </Button>\n                  <Button\n                    color=\"primary\"\n                    className={classes.clearBtn}\n                    onClick={this.clearInputs}\n                  >\n                    Clear\n                  </Button>\n                </Box>\n              </DialogActions>\n            </Box>\n          </Box>\n        </Dialog>\n      </>\n    );\n  }\n}\n\nexport default withStyles(SearchFormStyles, { withTheme: true })(SearchForm);\n","/Users/dzianis/Movie-Project/client/src/view/Pages/Blog/components/TopicMessage/TopicMessageStyle.js",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/NavBar/components/SearchForm/SliderStyle.js",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/NavBar/components/SearchForm/SearchFormStyle.js",["372"],"export const SearchFormStyles = (theme) => ({\n  search: {\n    display: \"flex\",\n    alignItems: \"center\",\n    backgroundColor: \"#565050\",\n    padding: \"5px 15px\",\n    borderRadius: \"30px\",\n  },\n  searchIcon: {\n    cursor: \"pointer\",\n  },\n  searchButton: {\n    color: \"#fff\",\n  },\n  dialogTitle: {\n    color: \"#565050\",\n  },\n  title: {\n    padding: \"15px 15px\",\n  },\n  titleText: {\n    fontSize: \"30px\",\n    color: \"#565050\",\n    borderBottom: \"2px solid #565050\",\n  },\n  dialogText: {\n    color: \"#565050\",\n  },\n  dialogForm: {\n    backgroundColor: \"#292121ed\",\n    border: \"2px solid #57527b\",\n  },\n  overviewText: {\n    color: \"#565050\",\n  },\n  dialogInput: {\n    width: \"100%\",\n    backgroundColor: \"#fff\",\n    borderRadius: \"15px\",\n    border: \"4px solid #565050\",\n    \"& .MuiOutlinedInput-root .MuiOutlinedInput-notchedOutline\": {\n      border: \"none\",\n      display: \"none\",\n    },\n    \"& .MuiFormLabel-root\": {\n      display: \"none\",\n    },\n    \"& .MuiOutlinedInput-root.Mui-focused .MuiOutlinedInput-notchedOutline\": {\n      border: \"none\",\n    },\n    \"& .MuiOutlinedInput-input\": {\n      border: \"none\",\n    },\n    \"& .MuiInputLabel-outlined\": {\n      display: \"none\",\n    },\n    \"& .MuiInputLabel-outlined\": {\n      border: \"none\",\n    },\n  },\n  genreslist: {\n    border: \"2px solid #565050\",\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    overflowY:\"scroll\",\n    height:\"200px\",\n    [theme.breakpoints.down(\"xs\")]: {\n       justifyContent: \"center\",\n       width: \"55%\"\n    },\n  },\n  genreItem: {\n    width: \"45%\",\n    margin: 0,\n    color: \"#565050\",\n    [theme.breakpoints.down(\"xs\")]: {\n        width: \"51%\",\n     },\n  },\n  searchCheckbox: {\n    color: \"#565050\",\n    \"&.span.MuiIconButton-label\": {\n      color: \"#565050\",\n    },\n  },\n  searchBtn: {\n    backgroundColor: \"#fff\",\n    color: \"#565050\",\n    padding: \"5px 30px\",\n    \"&:hover\": {\n      backgroundColor: \"#565050\",\n      color: \"#fff\",\n    },\n  },\n  slider: {\n    color: \"#52af77\",\n    \"& .MuiSlider-root\": {\n      height: \"100px\",\n    },\n  },\n  \"MuiSlider-track\": {\n    height: 4,\n    borderRadius: 2,\n  },\n  genreItemCheckbox: {},\n  dialogBody: {\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  dialogContent: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    color: \"#565050\",\n    [theme.breakpoints.down(\"xs\")]: {\n        flexDirection: \"column\",\n        overflow: \"hidden\"\n    },\n  },\n  dialogActions: {\n    display: \"flex\",\n    alignItems: \"flex-end\",\n    [theme.breakpoints.down(\"xs\")]: {\n        flexDirection: \"column\",\n        alignItems: \"center\",\n    },\n  },\n  clearBtn: {\n    marginTop: 20,\n    backgroundColor: \"#fff\",\n    color: \"#565050\",\n    padding: \"5px 30px\",\n    \"&:hover\": {\n      backgroundColor: \"#565050\",\n      color: \"#fff\",\n    },\n  }\n});\n\n","/Users/dzianis/Movie-Project/client/src/store/reducers/EventReducer.js",["373"],"/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/NavBar/components/CreateForm/CreateForm.jsx",["374","375","376","377","378","379","380","381"],"/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/Types/Types.js",["382","383"],"/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/Locations/Locations.js",["384","385"],"/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/NavBar/components/CreateForm/SliderStyle.js",[],"/Users/dzianis/Movie-Project/client/src/view/Pages/HomePage/components/NavBar/components/CreateForm/CreateFormStyle.js",["386"],{"ruleId":"387","replacedBy":"388"},{"ruleId":"389","replacedBy":"390"},{"ruleId":"391","severity":1,"message":"392","line":27,"column":25,"nodeType":"393","messageId":"394","endLine":27,"endColumn":35},{"ruleId":"395","severity":1,"message":"396","line":54,"column":11,"nodeType":"397","endLine":58,"endColumn":13},{"ruleId":"391","severity":1,"message":"398","line":3,"column":10,"nodeType":"393","messageId":"394","endLine":3,"endColumn":25},{"ruleId":"391","severity":1,"message":"399","line":18,"column":8,"nodeType":"393","messageId":"394","endLine":18,"endColumn":18},{"ruleId":"400","severity":1,"message":"401","line":151,"column":11,"nodeType":"402","messageId":"403","endLine":151,"endColumn":41,"fix":"404"},{"ruleId":"400","severity":1,"message":"405","line":152,"column":11,"nodeType":"402","messageId":"403","endLine":152,"endColumn":40,"fix":"406"},{"ruleId":"400","severity":1,"message":"401","line":212,"column":11,"nodeType":"402","messageId":"403","endLine":212,"endColumn":41,"fix":"407"},{"ruleId":"400","severity":1,"message":"405","line":213,"column":11,"nodeType":"402","messageId":"403","endLine":213,"endColumn":40,"fix":"408"},{"ruleId":"395","severity":1,"message":"396","line":111,"column":11,"nodeType":"397","endLine":111,"endColumn":67},{"ruleId":"409","severity":1,"message":"410","line":27,"column":9,"nodeType":"411","endLine":27,"endColumn":47},{"ruleId":"395","severity":1,"message":"396","line":49,"column":11,"nodeType":"397","endLine":52,"endColumn":13},{"ruleId":"409","severity":1,"message":"410","line":28,"column":11,"nodeType":"411","endLine":28,"endColumn":39},{"ruleId":"412","severity":1,"message":"413","line":68,"column":13,"nodeType":"414","messageId":"415","endLine":68,"endColumn":20},{"ruleId":"412","severity":1,"message":"416","line":52,"column":3,"nodeType":"414","messageId":"415","endLine":52,"endColumn":15},{"ruleId":"412","severity":1,"message":"416","line":49,"column":3,"nodeType":"414","messageId":"415","endLine":49,"endColumn":15},{"ruleId":"395","severity":1,"message":"396","line":120,"column":11,"nodeType":"397","endLine":124,"endColumn":13},{"ruleId":"409","severity":1,"message":"410","line":159,"column":23,"nodeType":"411","endLine":159,"endColumn":41},{"ruleId":"409","severity":1,"message":"410","line":175,"column":23,"nodeType":"411","endLine":175,"endColumn":41},{"ruleId":"412","severity":1,"message":"417","line":57,"column":5,"nodeType":"414","messageId":"415","endLine":57,"endColumn":32},{"ruleId":"391","severity":1,"message":"418","line":1,"column":34,"nodeType":"393","messageId":"394","endLine":1,"endColumn":47},{"ruleId":"391","severity":1,"message":"419","line":1,"column":17,"nodeType":"393","messageId":"394","endLine":1,"endColumn":26},{"ruleId":"391","severity":1,"message":"420","line":2,"column":8,"nodeType":"393","messageId":"394","endLine":2,"endColumn":13},{"ruleId":"391","severity":1,"message":"421","line":3,"column":8,"nodeType":"393","messageId":"394","endLine":3,"endColumn":24},{"ruleId":"391","severity":1,"message":"422","line":10,"column":3,"nodeType":"393","messageId":"394","endLine":10,"endColumn":19},{"ruleId":"391","severity":1,"message":"423","line":11,"column":3,"nodeType":"393","messageId":"394","endLine":11,"endColumn":13},{"ruleId":"391","severity":1,"message":"424","line":18,"column":3,"nodeType":"393","messageId":"394","endLine":18,"endColumn":19},{"ruleId":"391","severity":1,"message":"425","line":19,"column":3,"nodeType":"393","messageId":"394","endLine":19,"endColumn":11},{"ruleId":"391","severity":1,"message":"426","line":24,"column":23,"nodeType":"393","messageId":"394","endLine":24,"endColumn":34},{"ruleId":"391","severity":1,"message":"427","line":6,"column":8,"nodeType":"393","messageId":"394","endLine":6,"endColumn":20},{"ruleId":"391","severity":1,"message":"426","line":8,"column":10,"nodeType":"393","messageId":"394","endLine":8,"endColumn":21},{"ruleId":"391","severity":1,"message":"427","line":6,"column":8,"nodeType":"393","messageId":"394","endLine":6,"endColumn":20},{"ruleId":"428","severity":1,"message":"429","line":41,"column":6,"nodeType":"430","endLine":41,"endColumn":12,"suggestions":"431"},{"ruleId":"412","severity":1,"message":"417","line":58,"column":5,"nodeType":"414","messageId":"415","endLine":58,"endColumn":32},"no-native-reassign",["432"],"no-negated-in-lhs",["433"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SubmissionError' is defined but never used.","'jwt_decode' is defined but never used.","no-useless-computed-key","Unnecessarily computed property [\"vote_count.gte\"] found.","Property","unnecessarilyComputedProperty",{"range":"434","text":"435"},"Unnecessarily computed property [\"vote_average.gte\"] found.",{"range":"436","text":"437"},{"range":"438","text":"435"},{"range":"439","text":"437"},"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-dupe-keys","Duplicate key 'display'.","ObjectExpression","unexpected","Duplicate key 'totalRatings'.","Duplicate key '& .MuiInputLabel-outlined'.","'SET_LOCATIONS' is defined but never used.","'Component' is defined but never used.","'axios' is defined but never used.","'CustomizedSlider' is defined but never used.","'FormControlLabel' is defined but never used.","'Typography' is defined but never used.","'CircularProgress' is defined but never used.","'Backdrop' is defined but never used.","'useSelector' is defined but never used.","'TagFacesIcon' is defined but never used.","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["440"],"no-global-assign","no-unsafe-negation",[4184,4202],"\"vote_count.gte\"",[4226,4246],"\"vote_average.gte\"",[5600,5618],[5642,5662],{"desc":"441","fix":"442"},"Update the dependencies array to be: [city, dispatch]",{"range":"443","text":"444"},[1142,1148],"[city, dispatch]"]